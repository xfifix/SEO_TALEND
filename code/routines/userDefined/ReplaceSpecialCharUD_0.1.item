package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class ReplaceSpecialCharUD {

    /**
     * getValidFieldReplace: return string without spaces and accented characters.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string(field) input: The string need to be modified.
     * 
     * {example} getValidFieldReplace("garçon écolier") # garconecolier.
     * 
     * {author} LAM 04/09/2012
     */
    public static String getValidFieldReplace(String field) {
        String min = field.replaceAll("é", "e").replaceAll("è", "e").replaceAll("ê", "e").replaceAll("ë", "e").replaceAll("à", "a").replaceAll("â", "a").replaceAll("ä", "a").replaceAll("ù", "u").replaceAll("ü", "u").replaceAll("û", "u").replaceAll("î", "i").replaceAll("ï", "i").replaceAll("ö", "o").replaceAll("ô", "o").replaceAll("ç", "c").replaceAll("&nbsp;", "").replaceAll(" ", "");
        String maj = min.replaceAll("É", "E").replaceAll("È", "E").replaceAll("Ê", "E").replaceAll("Ë", "E").replaceAll("À", "A").replaceAll("Â", "A").replaceAll("Ä", "A").replaceAll("Ù", "U").replaceAll("Ü", "U").replaceAll("Û", "U").replaceAll("Î", "I").replaceAll("Ï", "I").replaceAll("Ö", "O").replaceAll("Ô", "O").replaceAll("Ç", "C");
        return maj.trim();
    }
    
    
    
}
